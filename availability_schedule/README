
Installation

 - pip install bitarray
 - pip install tinydb
 - pip install Flask


Execute python availability_schedule_resource.py


Following Sample Data is already populated:

 available_hours_in_a_day(day_hours) is a 24 character length string filled with "0" or "1" for each hour of the day,
 where "1" represents availibility status for particular user for that hour on a day.


    day_hours = TimeHourSlotsInOneDay()


    #mark hour 9 to "1", between 9:00 to 10:00 am specified user available
    day_hours.mark_hour_slots(start_hour=9, count=1)


    db.insert({"user":"Carl", "start_time": "2018-07-02T00:00:00", "end_time": "2018-07-07T00:00:00",
                    "available_hours_in_a_day": str(day_hours) ,
                    "created_time": "2018-06-06T00:00:00"})


    # reset all to "0"(unmark)
    day_hours.reset()
    day_hours.mark_hour_slots(start_hour=10,count=2)

    db.insert({"user":"Carl", "start_time": "2018-07-04T00:00:00", "end_time": "2018-07-05T00:00:00",
                    "available_hours_in_a_day": str(day_hours) ,
                    "created_time": "2018-06-06T00:00:01"})

    day_hours.reset()
    day_hours.mark_hour_slots(start_hour=9, count=6)

    db.insert({"user": "Philipp", "start_time": "2018-07-02T00:00:00", "end_time": "2018-07-07T00:00:00",
               "available_hours_in_a_day": str(day_hours),
               "created_time": "2018-06-06T00:00:02"})

    day_hours.reset()
    day_hours.mark_hour_slots(start_hour=12, count=6)
    db.insert({"user": "Sarah", "start_time": "2018-07-02T00:00:00", "end_time": "2018-07-05T00:00:00",
               "available_hours_in_a_day": str(day_hours),
               "created_time": "2018-06-06T00:00:03"})

    day_hours.reset()
    day_hours.mark_hour_slots(start_hour=9, count=3)
    db.insert({"user": "Sarah", "start_time": "2018-07-03T00:00:00", "end_time": "2018-07-04T00:00:00",
               "available_hours_in_a_day": str(day_hours),
               "created_time": "2018-06-06T00:00:04"})

    db.insert({"user": "Sarah", "start_time": "2018-07-05T00:00:00", "end_time": "2018-07-06T00:00:00",
               "available_hours_in_a_day": str(day_hours),
               "created_time": "2018-06-06T00:00:05"})



Example API Usage:

    Query available Slots

    curl -XPOST http://localhost:5000/available_interview_slots/Carl -d'{"interviewers":["Philipp","Sarah"],"range_start_time":"2018-07-02T08:00:00","range_end_time":"2018-07-10T08:00:00"}'

    {
      "available_slots": [
        [
          "2018-07-03T09:00:00",
          "2018-07-03T10:00:00"
        ],
        [
          "2018-07-05T09:00:00",
          "2018-07-05T10:00:00"
        ]
      ]
    }


    Query all Schedules for all users

    curl -XGET http://localhost:5000/schedules

    {
      "schedules": [
        {
          "available_hours_in_a_day": "000000000100000000000000",
          "created_time": "2018-06-06T00:00:00",
          "end_time": "2018-07-07T00:00:00",
          "id": 1,
          "start_time": "2018-07-02T00:00:00",
          "user": "Carl"
        },
        {
          "available_hours_in_a_day": "000000000011000000000000",
          "created_time": "2018-06-06T00:00:01",
          "end_time": "2018-07-05T00:00:00",
          "id": 2,
          "start_time": "2018-07-04T00:00:00",
          "user": "Carl"
        },
        {
          "available_hours_in_a_day": "000000000111111000000000",
          "created_time": "2018-06-06T00:00:02",
          "end_time": "2018-07-07T00:00:00",
          "id": 3,
          "start_time": "2018-07-02T00:00:00",
          "user": "Philipp"
        },
        {
          "available_hours_in_a_day": "000000000000111111000000",
          "created_time": "2018-06-06T00:00:03",
          "end_time": "2018-07-05T00:00:00",
          "id": 4,
          "start_time": "2018-07-02T00:00:00",
          "user": "Sarah"
        },
        {
          "available_hours_in_a_day": "000000000111000000000000",
          "created_time": "2018-06-06T00:00:04",
          "end_time": "2018-07-04T00:00:00",
          "id": 5,
          "start_time": "2018-07-03T00:00:00",
          "user": "Sarah"
        },
        {
          "available_hours_in_a_day": "000000000111000000000000",
          "created_time": "2018-06-06T00:00:05",
          "end_time": "2018-07-06T00:00:00",
          "id": 6,
          "start_time": "2018-07-05T00:00:00",
          "user": "Sarah"
        }
      ]
    }


    Query schedules for particular user

    curl -XGET http://localhost:5000/schedules/Sarah

    {
      "schedules": [
        {
          "available_hours_in_a_day": "000000000000111111000000",
          "created_time": "2018-06-06T00:00:03",
          "end_time": "2018-07-05T00:00:00",
          "id": 4,
          "start_time": "2018-07-02T00:00:00",
          "user": "Sarah"
        },
        {
          "available_hours_in_a_day": "000000000111000000000000",
          "created_time": "2018-06-06T00:00:04",
          "end_time": "2018-07-04T00:00:00",
          "id": 5,
          "start_time": "2018-07-03T00:00:00",
          "user": "Sarah"
        },
        {
          "available_hours_in_a_day": "000000000111000000000000",
          "created_time": "2018-06-06T00:00:05",
          "end_time": "2018-07-06T00:00:00",
          "id": 6,
          "start_time": "2018-07-05T00:00:00",
          "user": "Sarah"
        }
      ]
    }


    Add schedules for particular user

    curl -v -XPOST http://localhost:5000/schedules/Sarah   -d'{"schedules":[{"start_time":"2018-07-06T00:00:00","end_time":"2018-07-07T00:00:00", "available_hours_in_a_day":"000000000100000000000000"}]}'

    Note: Unnecessary use of -X or --request, POST is already inferred.
    *   Trying ::1...
    * TCP_NODELAY set
    * Connected to localhost (::1) port 5000 (#0)
    > POST /schedules/Sarah HTTP/1.1
    > Host: localhost:5000
    > User-Agent: curl/7.54.0
    > Accept: */*
    > Content-Length: 140
    > Content-Type: application/x-www-form-urlencoded
    >
    * upload completely sent off: 140 out of 140 bytes
    * HTTP 1.0, assume close after body
    < HTTP/1.0 201 CREATED
    < Content-Type: text/html; charset=utf-8
    < Content-Length: 0
    < Server: Werkzeug/0.14.1 Python/2.7.3
    < Date: Tue, 03 Jul 2018 11:10:53 GMT
    <


    Query available Slots again

    curl  -XPOST http://localhost:5000/available_interview_slots/Carl -d'{"interviewers":["Philipp","Sarah"],"range_start_time":"2018-07-02T08:00:00","range_end_time":"2018-07-10T08:00:00"}'
    {
      "available_slots": [
        [
          "2018-07-03T09:00:00",
          "2018-07-03T10:00:00"
        ],
        [
          "2018-07-05T09:00:00",
          "2018-07-05T10:00:00"
        ],
        [
          "2018-07-06T09:00:00",
          "2018-07-06T10:00:00"
        ]
      ]
    }





